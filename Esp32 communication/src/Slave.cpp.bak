#include "LoRa_E22.h"

#define M0_PIN 32
#define M1_PIN 33

#define LORA_RX_PIN 16
#define LORA_TX_PIN 17

#define LED1_PIN 12
#define LED2_PIN 13

HardwareSerial LoRaSerial(1);

LoRa_E22 e22(LORA_TX_PIN, LORA_RX_PIN, &LoRaSerial, UART_BPS_RATE_9600);

unsigned long ledActivatedTime = 0;
bool ledsOn = false;
const unsigned long ledTimeout = 5000;
bool togglePending = false;
unsigned long toggleStartTime = 0;


void setup() {
  pinMode(M0_PIN, OUTPUT);
  pinMode(M1_PIN, OUTPUT);
  digitalWrite(M0_PIN, LOW);
  digitalWrite(M1_PIN, LOW);

  pinMode(LED1_PIN, OUTPUT);
  pinMode(LED2_PIN, OUTPUT);
  digitalWrite(LED1_PIN, LOW);
  digitalWrite(LED2_PIN, LOW);

  Serial.begin(115200);
  delay(500);

  LoRaSerial.begin(9600, SERIAL_8N1, LORA_RX_PIN, LORA_TX_PIN);

  bool rs = e22.begin();
  /*
  if (!rs) {
    Serial.println("Cлейв: Не удалось инициализировать E22! !");
  } else {
    Serial.println("Модуль LoRa инициализировано успешно");
  }
*/
}
void loop() {
  if (e22.available() > 1) {
    ResponseStructContainer rsc = e22.receiveMessage(32);
    if (rsc.status.code == SUCCESS) {
      char* msg = (char*)rsc.data;
      Serial.print("Слейв: получено: ");
      Serial.println(msg);

      if (strcmp(msg, "STOP") == 0 && !togglePending) {
        togglePending = true;
        toggleStartTime = millis();
        Serial.println("Слейв: ожидание перед переключением (5 секунд)");

        const char ack[] = "ACK:STOP";
        e22.sendFixedMessage(0, 0, 18, (void*)ack, strlen(ack));
      }
    }
    rsc.close();
  }

  if (togglePending && millis() - toggleStartTime >= 5000) {
    ledsOn = !ledsOn;
    digitalWrite(LED1_PIN, ledsOn ? HIGH : LOW);
    digitalWrite(LED2_PIN, ledsOn ? HIGH : LOW);

    Serial.print("Слейв: светодиоды ");
    Serial.println(ledsOn ? "Включены" : "Выключены");

    togglePending = false; 
  }
}
